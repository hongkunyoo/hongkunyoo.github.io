apiVersion: v1
kind: Pod
metadata:
  labels:
    run: flask
  name: flask
spec:
  containers:
  - image: hongkunyoo/flask
    imagePullPolicy: Always
    name: flask
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask
spec:
  replicas: 1
  selector:
    matchLabels:
      run: flask
  template:
    metadata:
      labels:
        run: flask
    spec:
      containers:
      - name: flask
        image: hongkunyoo/flask
        imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: flask
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    run: flask
  sessionAffinity: None
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flask
spec:
  ingressClassName: nginx
  rules:
  - host: $HOST
    http:
      paths:
      - backend:
          service:
            name: flask
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - $HOST
    secretName: $TLS 
---
import flask
from flask import Flask, request, redirect, session
import io
import pprint
import base64
import jwt 

app = Flask(__name__)

@app.route('/', methods=["GET", "POST"])
def hello():
    return return_request('/')

@app.route('/<PATH>', methods=["GET", "POST"])
def hellopath(PATH):
    return return_request(PATH)



def return_request(path):

    sb = io.StringIO()
    d = {}
    d['headers'] = [{k:v} for k, v in request.headers]
    d['cookies'] = [{k:v} for k, v in request.cookies.items()]
    d['method'] = request.method
    d['uri'] = path
    d['query'] = request.query_string.decode('UTF-8')
    d['data'] = request.data.decode("utf-8")
    d['args'] = [{k:v} for k, v in request.args.items()]
    d['form'] = [{k:v} for k, v in request.form.items()]

    try:
        token = request.headers.get("Authorization")[7:]
        #print(token)
        id_token = jwt.decode(token, options={"verify_signature": False})
        d['id_token'] = id_token
    except:
        d['id_token'] = None


    pprint.pprint(d, stream=sb)
    cont = sb.getvalue()
    print(cont)

    return "<pre>" + cont + "</pre>"


if __name__ == '__main__':
    app.run(host='0.0.0.0', debug=True)
