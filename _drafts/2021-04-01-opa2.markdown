---
layout: post
title:  "쿠버네티스 Admission Control #2 - Open Policy Agent"
date:   2021-05-01 00:00:00
categories: kubernetes admission-control
image: /assets/images/opa/landing-ac.png
---
[지난 쿠버네티스 Admission Control #1](https://coffeewhale.com/kubernetes/admission-control/2021/04/28/opa1/)에서는 Admission Control의 개념에 대해 알아보았고 직접 Custom Admission Control을 만들어 봤습니다. 이번 시간에는 General Policy Controller인 Open Policy Agent(OPA)에 대해서 알아보고 OPA Policy를 이용하여 사용자의 세부 사용성을 관리해 보겠습니다.

## Open Policy Agent란?

OPA는 플랫폼 관리자에게 체계적이고 세밀한(fine-graded) 권한관리를 손쉽게 할 수 있는 툴을 제공하는 오픈소스입니다. OPA는 쿠버네티스 뿐만 아니라 OPA 엔진을 이해하는 어떠한 플랫폼 위에서도 동작합니다. OPA는 실제로 요청을 막는 메커니즘은 구현되어 있지 않습니다. 그것은 각 플랫폼마다 다르기 때문에 그 플랫폼의 메커니즘을 그대로 사용합니다. 대신 OPA는 관리자가 작성한 Policy를 읽고 해당 요청을 허용할지 반려할지만을 판단합니다. 각 플랫폼에서는 OPA의 판단 내용을 기반하여 실제 Admission Control 동작을 수행합니다.

Part #1에서 살펴본 flask webhook을 살펴 보겠습니다. 해당 webhook도 단지 들어 온 요청을 반려할지 말지만을 판단(`response.allowed`) 하였고 실제 동작은 쿠버네티스에서 수행하였습니다. 이와 마찬가지로 OPA도 관리자가 작성한 Policy를 기반하여 플랫폼에게 Admission Control의 결과를 전달합니다. 해당 포스트에서는 쿠버네티스 플랫폼 위에서의 OPA 사용을 중심으로 설명드립니다.

## Rego Language

OPA는 **Policy**를 기반하여 그 정책에 맞게 사용자 접근을 관리합니다. Policy는 OPA에서 핵심적인 역할을 담당합니다. OPA를 어떻게 사용하는가는 이 Policy를 어떻게 작성하느냐에 따라 달려 있습니다. OPA에서는 Policy를 Rego라는 자체적인 질의언어(Query Language)를 이용하여 표현합니다. Rego는 일반적인 imperative 언어와는 조금 다르게 declarative로 동작합니다. 선언적으로 표현되기 때문에 초기 Rego 언어를 이해하는데 조금 시간이 걸립니다. 예를 들어, 필자가 처음 Rego를 접했을 때 당황했던 것은 imperative 언어에서 많이 사용하는 `if`, `while`, `for`와 같은 문법이 Rego 언어에서는 지원하지 않습니다. 물론 조금 다른 방법으로 이러한 기능들을 제공하긴 하지만 처음 그 컨셉을 이해하는데 어색할 수도 있습니다. 저도 아직까지 완벽하게 Rego에 대해 이해한다고 말하긴 어렵지만 OPA 웹페이지에서 제공하는 [여러 튜토리얼](https://www.openpolicyagent.org/docs/latest/kubernetes-tutorial)을 따라하다 보면 쿠버네티스의 간단한 Admission Control 로직 정도는 가볍게 작성할 수 있을 것 같습니다. 또한 OPA에서는 자신이 만든 Policy를 편리하게 검증해 볼 수 있게 [Rego Playground](https://play.openpolicyagent.org)라는 온라인 Query 테스트기를 제공합니다. 처음 Rego라는 언어를 이해하기에 매우 좋은 툴입니다. 자신이 만든 Policy를 실제 적용하기 전에 이 툴을 통해 꼭 검증해 보시기 바랍니다.

![](rego-playground.png)



좌측 패널은 사용자가 직접 Policy를 작성해 볼 수 있는 editor 공간입니다. 우측 상단은 input으로 들어올 JSON 객체를 정의합니다. 마지막으로 우측 하단은 `Evaluate`이라는 버튼을 눌렀을 때 Policy의 결과가 나오는 output 패널입니다.


### Base



### Rule


### xxx